#!/usr/bin/env python3
import argparse
import os
import sys

import matplotlib.pyplot as plt
import pandas as pd


def parse_args():
    DEFAULT_FILE = os.path.expanduser("~/.local/share/weight/weight.csv")
    parser = argparse.ArgumentParser(description="Visualize time series weight data")
    parser.add_argument(
        "-f",
        "--file",
        type=argparse.FileType("r"),
        help="File to plot.\
                        Defaults to ~/.local/share/weight/weight.csv.\
                        Use - to use STDIN as input",
        default=DEFAULT_FILE,
        required=False,
    )
    return parser.parse_args()


def main():
    args = parse_args()
    print(args)
    if args.file == "-":
        file = sys.stdin
    else:
        file = args.file
    df = pd.read_csv(file)
    df["date"] = pd.to_datetime(df["date"])
    df = (
        df.set_index("date")
        .reindex(pd.date_range(df["date"].min(), df["date"].max()))
        .fillna(method="ffill")
    )

    weight = df["weight"]
    average = weight.rolling(window=7).mean()
    lines = weight.index[weight.index.weekday == 0]

    _, ax = plt.subplots(figsize=(12, 8))
    plt.vlines(lines, weight.min(), weight.max(), linestyle="dashdot", color="tab:blue")
    plt.plot(weight, marker=".", label="Weight", color="tab:green", linestyle="dashdot")
    plt.plot(average, color="tab:red", label="7 Day average", marker="o")
    # Adds the weight as label to the point.
    # Excluding the first 6 point as they don't have an average
    for k, v in zip(average.index[6:], average[6:]):
        ax.text(k, v, f"{v:.1f}", size=8, color="r")

    plt.ylabel("Weight(kgs)")
    plt.xlabel("Date")
    plt.xticks(rotation="vertical")
    plt.grid()
    plt.legend()

    plt.show()


if __name__ == "__main__":
    main()
